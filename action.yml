name: 'Login to AWS'
description: 'Authenticate to AWS using OIDC with optional ECR login and EKS setup'
author: 'KoalaOps'

branding:
  icon: 'cloud'
  color: 'orange'

inputs:
  aws_region:
    description: 'AWS region'
    required: true
  
  role_to_assume:
    description: 'ARN of the IAM role to assume (for OIDC)'
    required: false
  
  role_session_name:
    description: 'Name for the assumed role session'
    required: false
    default: 'github-actions-${{ github.run_id }}'
  
  role_duration:
    description: 'Duration of the role session in seconds'
    required: false
    default: '3600'

  aws_access_key_id:
    description: 'AWS Access Key ID (if not using OIDC)'
    required: false

  aws_secret_access_key:
    description: 'AWS Secret Access Key (if not using OIDC)'
    required: false

  enable_ecr_login:
    description: 'Enable Docker login to Amazon ECR'
    required: false
    default: 'false'
  
  eks_cluster_name:
    description: 'Name of the EKS cluster to configure kubectl for'
    required: false
  
  ecr_registries:
    description: 'Comma-separated list of ECR registry IDs for cross-account access'
    required: false
  
  ecr_repositories:
    description: 'Comma-separated list of ECR repositories to ensure exist (e.g., "backend,frontend")'
    required: false
    default: ''

  codeartifact_domain:
    description: 'CodeArtifact domain name'
    required: false

  codeartifact_repository:
    description: 'CodeArtifact repository name'
    required: false

  codeartifact_tool:
    description: 'Tool to configure for CodeArtifact (npm, pip, twine, dotnet, nuget, swift)'
    required: false

  codeartifact_region:
    description: 'Region for CodeArtifact (defaults to aws_region if not specified)'
    required: false

  codeartifact_domain_owner:
    description: 'AWS account ID that owns the CodeArtifact domain (defaults to authenticated account)'
    required: false

  codeartifact_duration:
    description: 'Duration of the CodeArtifact token in seconds'
    required: false
    default: '43200'

outputs:
  aws_account_id:
    description: 'AWS Account ID'
    value: ${{ steps.aws.outputs.aws-account-id }}

  ecr_registry:
    description: 'ECR registry URL'
    value: ${{ steps.login-ecr.outputs.registry }}

  ecr_logged_in:
    description: 'Whether ECR login was successful'
    value: ${{ steps.ecr-status.outputs.logged_in }}

  kubectl_context:
    description: 'Kubernetes context name if EKS was configured'
    value: ${{ steps.eks.outputs.context }}

  codeartifact_logged_in:
    description: 'Whether CodeArtifact login was successful'
    value: ${{ steps.codeartifact-status.outputs.logged_in }}

runs:
  using: 'composite'
  steps:
    - name: Configure AWS credentials
      id: aws
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.role_to_assume }}
        role-session-name: ${{ inputs.role_session_name }}
        role-duration-seconds: ${{ inputs.role_duration }}
        aws-access-key-id: ${{ inputs.aws_access_key_id }}
        aws-secret-access-key: ${{ inputs.aws_secret_access_key }}
        aws-region: ${{ inputs.aws_region }}
        mask-aws-account-id: false

    - name: Verify AWS connection
      shell: bash
      run: |
        echo "::group::AWS Authentication Status"
        aws sts get-caller-identity --output table
        echo "✅ AWS authentication successful"
        echo "::endgroup::"

    - name: Login to Amazon ECR
      id: login-ecr
      if: inputs.enable_ecr_login == 'true'
      uses: aws-actions/amazon-ecr-login@v2
      with:
        registries: ${{ inputs.ecr_registries }}
        mask-password: true

    - name: Log ECR status
      id: ecr-status
      if: inputs.enable_ecr_login == 'true'
      shell: bash
      run: |
        echo "::notice::📦 ECR login successful for registry: ${{ steps.login-ecr.outputs.registry }}"
        echo "logged_in=true" >> $GITHUB_OUTPUT

    - name: Set ECR not logged in
      id: ecr-status-false
      if: inputs.enable_ecr_login != 'true'
      shell: bash
      run: |
        echo "logged_in=false" >> $GITHUB_OUTPUT
    
    - name: Ensure ECR repositories exist
      if: inputs.enable_ecr_login == 'true' && inputs.ecr_repositories != ''
      uses: KoalaOps/ensure-ecr-repository@v1
      with:
        repository-name: ${{ inputs.ecr_repositories }}
        aws-region: ${{ inputs.aws_region }}

    - name: Setup kubectl for EKS
      id: eks
      if: inputs.eks_cluster_name != ''
      shell: bash
      run: |
        echo "::group::EKS Configuration"
        
        # Update kubeconfig
        aws eks update-kubeconfig \
          --region ${{ inputs.aws_region }} \
          --name ${{ inputs.eks_cluster_name }} \
          --alias ${{ inputs.eks_cluster_name }}
        
        # Get the context name
        CONTEXT=$(kubectl config current-context)
        echo "context=$CONTEXT" >> $GITHUB_OUTPUT
        
        # Verify connection
        echo "Testing EKS connection..."
        kubectl get nodes --show-labels=false --no-headers | head -5 || true
        
        echo "✅ EKS cluster configured: ${{ inputs.eks_cluster_name }}"
        echo "📍 Context: $CONTEXT"
        echo "::endgroup::"

    - name: Login to AWS CodeArtifact
      id: codeartifact
      if: inputs.codeartifact_domain != '' && inputs.codeartifact_repository != '' && inputs.codeartifact_tool != ''
      shell: bash
      run: |
        echo "::group::CodeArtifact Configuration"

        # Set defaults
        CA_REGION="${{ inputs.codeartifact_region }}"
        if [[ -z "$CA_REGION" ]]; then
          CA_REGION="${{ inputs.aws_region }}"
        fi

        CA_DOMAIN_OWNER="${{ inputs.codeartifact_domain_owner }}"
        if [[ -z "$CA_DOMAIN_OWNER" ]]; then
          CA_DOMAIN_OWNER="${{ steps.aws.outputs.aws-account-id }}"
        fi

        # Login to CodeArtifact
        aws codeartifact login \
          --tool ${{ inputs.codeartifact_tool }} \
          --domain ${{ inputs.codeartifact_domain }} \
          --domain-owner $CA_DOMAIN_OWNER \
          --repository ${{ inputs.codeartifact_repository }} \
          --region $CA_REGION \
          --duration-seconds ${{ inputs.codeartifact_duration }}

        echo "✅ CodeArtifact login successful"
        echo "📦 Domain: ${{ inputs.codeartifact_domain }}"
        echo "📦 Repository: ${{ inputs.codeartifact_repository }}"
        echo "🔧 Tool: ${{ inputs.codeartifact_tool }}"
        echo "::endgroup::"

    - name: Log CodeArtifact status
      id: codeartifact-status
      if: inputs.codeartifact_domain != '' && inputs.codeartifact_repository != '' && inputs.codeartifact_tool != ''
      shell: bash
      run: |
        echo "::notice::📦 CodeArtifact login successful for ${{ inputs.codeartifact_tool }}"
        echo "logged_in=true" >> $GITHUB_OUTPUT

    - name: Set CodeArtifact not logged in
      id: codeartifact-status-false
      if: inputs.codeartifact_domain == '' || inputs.codeartifact_repository == '' || inputs.codeartifact_tool == ''
      shell: bash
      run: |
        echo "logged_in=false" >> $GITHUB_OUTPUT

    - name: Summary
      shell: bash
      run: |
        echo "### AWS Login Summary 🔐" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Service | Status | Details |" >> $GITHUB_STEP_SUMMARY
        echo "|---------|--------|---------|" >> $GITHUB_STEP_SUMMARY
        echo "| **AWS** | ✅ Authenticated | Account: ${{ steps.aws.outputs.aws-account-id }} |" >> $GITHUB_STEP_SUMMARY
        echo "| **Region** | 📍 ${{ inputs.aws_region }} | - |" >> $GITHUB_STEP_SUMMARY
        
        if [[ "${{ inputs.enable_ecr_login }}" == "true" ]]; then
          echo "| **ECR** | ✅ Logged in | Registry: ${{ steps.login-ecr.outputs.registry }} |" >> $GITHUB_STEP_SUMMARY
          if [[ -n "${{ inputs.ecr_repositories }}" ]]; then
            echo "| **ECR Repos** | ✅ Ensured | Repositories: ${{ inputs.ecr_repositories }} |" >> $GITHUB_STEP_SUMMARY
          fi
        fi
        
        if [[ -n "${{ inputs.eks_cluster_name }}" ]]; then
          echo "| **EKS** | ✅ Configured | Cluster: ${{ inputs.eks_cluster_name }} |" >> $GITHUB_STEP_SUMMARY
        fi

        if [[ -n "${{ inputs.codeartifact_domain }}" ]] && [[ -n "${{ inputs.codeartifact_repository }}" ]] && [[ -n "${{ inputs.codeartifact_tool }}" ]]; then
          echo "| **CodeArtifact** | ✅ Configured | Domain: ${{ inputs.codeartifact_domain }}, Repo: ${{ inputs.codeartifact_repository }}, Tool: ${{ inputs.codeartifact_tool }} |" >> $GITHUB_STEP_SUMMARY
        fi